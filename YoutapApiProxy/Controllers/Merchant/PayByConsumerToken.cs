using Microsoft.AspNetCore.Mvc;
using System.Net;
using Swashbuckle.AspNetCore.Annotations;

using Swashbuckle.AspNetCore.Filters;
using Examples;
using System.Net.Mime;
using System.Text.Json.Serialization;

namespace Controllers
{

    readonly partial struct Merchant
    {
        // OK
        [ProducesResponseType(typeof(PayByConsumerTokenResponseModel.Root), (int)HttpStatusCode.OK)]
        // [SwaggerResponseExample((int)HttpStatusCode.OK, typeof(WebhookExample))]

        // Request Body
        [Consumes(typeof(PayByConsumerTokenRequestModel.Root), MediaTypeNames.Application.Json)]

        [SwaggerOperation(Summary = "Purchase by scanning Consumer QR code", Description = @"
The merchant scans the QR code generated by the consumer, then sends the data read from the code to the endpoint.")]
        public static IResult PayByConsumerToken(string merchantId)
        {
            var result = File.ReadAllText(@"examples/Webhook_LowBalance.json");
            return Results.Text(result, MediaTypeNames.Application.Json);
        }

    }
}

namespace PayByConsumerTokenRequestModel
{
    // Root myDeserializedClass = JsonSerializer.Deserialize<Root>(myJsonResponse);
    public class PaymentAmount
    {
        [JsonPropertyName("currency")]
        public string Currency { get; set; }

        [JsonPropertyName("amount")]
        public double Amount { get; set; }
    }

    public class Root
    {
        [JsonPropertyName("invoiceId")]
        public string InvoiceId { get; set; }

        [JsonPropertyName("poiId")]
        public string PoiId { get; set; }

        [JsonPropertyName("poiRequestRef")]
        public string PoiRequestRef { get; set; }

        [JsonPropertyName("payerToken")]
        public string PayerToken { get; set; }

        [JsonPropertyName("payerTokenType")]
        public string PayerTokenType { get; set; }

        [JsonPropertyName("paymentAmount")]
        public PaymentAmount PaymentAmount { get; set; }
    }


}

namespace PayByConsumerTokenResponseModel
{
    // Root myDeserializedClass = JsonSerializer.Deserialize<Root>(myJsonResponse);
    public class PaymentAmount
    {
        [JsonPropertyName("currency")]
        public string Currency { get; set; }

        [JsonPropertyName("amount")]
        public int Amount { get; set; }
    }

    public class Root
    {
        [JsonPropertyName("id")]
        public string Id { get; set; }

        [JsonPropertyName("merchantId")]
        public string MerchantId { get; set; }

        [JsonPropertyName("invoiceId")]
        public string InvoiceId { get; set; }

        [JsonPropertyName("poiRequestRef")]
        public string PoiRequestRef { get; set; }

        [JsonPropertyName("payerToken")]
        public string PayerToken { get; set; }

        [JsonPropertyName("payerTokenType")]
        public string PayerTokenType { get; set; }

        [JsonPropertyName("payerFsp")]
        public string PayerFsp { get; set; }

        [JsonPropertyName("status")]
        public string Status { get; set; }

        [JsonPropertyName("createdAt")]
        public DateTime CreatedAt { get; set; }

        [JsonPropertyName("paymentAmount")]
        public PaymentAmount PaymentAmount { get; set; }

        [JsonPropertyName("transactionRef")]
        public string TransactionRef { get; set; }

        [JsonPropertyName("payerFspTransactionRef")]
        public string PayerFspTransactionRef { get; set; }
    }


}